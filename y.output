Nonterminals useless in grammar

   lecture
   ecriture
   liste_variables
   format
   suite_ecriture


Terminals unused in grammar

   VRAI
   FAUX
   SINON
   POUR
   CSTE_REEL
   ACCOLADE_FERMANTE
   ACCOLADE_OUVRANT
   LIRE
   ECRIRE


Rules useless in grammar

   78 lecture: LIRE PARENTHESE_OUVRANTE liste_variables PARENTHESE_FERMANTE

   79 ecriture: ECRIRE PARENTHESE_OUVRANTE format suite_ecriture PARENTHESE_FERMANTE

   80 liste_variables: variable
   81                | liste_variables variable

   82 format: %empty

   83 suite_ecriture: %empty
   84               | VIRGULE variable suite_ecriture


State 111 conflicts: 2 shift/reduce
State 112 conflicts: 2 shift/reduce


Grammar

    0 $accept: programme $end

    1 programme: PROG corps

    2 corps: liste_declarations liste_instructions
    3      | liste_instructions

    4 liste_declarations: declaration POINT_VIRGULE
    5                   | liste_declarations declaration POINT_VIRGULE

    6 declaration: declaration_type
    7            | declaration_variable
    8            | declaration_procedure
    9            | declaration_fonction

   10 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type

   11 suite_declaration_type: STRUCT liste_champs FSTRUCT
   12                       | TABLEAU dimension DE nom_type

   13 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT

   14 liste_dimensions: une_dimension
   15                 | liste_dimensions VIRGULE une_dimension

   16 une_dimension: expression POINT_POINT expression

   17 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type

   18 declaration_procedure: PROCEDURE IDF liste_parametres corps

   19 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps

   20 liste_instructions: DEBUT suite_liste_inst FIN

   21 suite_liste_inst: instruction POINT_VIRGULE
   22                 | suite_liste_inst instruction POINT_VIRGULE

   23 instruction: affectation
   24            | condition
   25            | tant_que
   26            | appel
   27            | VIDE
   28            | RETOURNE resultat_retourne

   29 liste_champs: un_champ
   30             | liste_champs POINT_VIRGULE un_champ

   31 un_champ: IDF DEUX_POINTS nom_type

   32 nom_type: type_simple
   33         | IDF

   34 type_simple: ENTIER
   35            | REEL
   36            | BOOLEEN
   37            | CARACTERE
   38            | CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

   39 liste_parametres: %empty
   40                 | PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE

   41 liste_param: un_param
   42            | liste_param POINT_VIRGULE un_param

   43 un_param: IDF DEUX_POINTS type_simple

   44 resultat_retourne: PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE

   45 appel: IDF liste_arguments

   46 liste_arguments: %empty
   47                | PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE

   48 liste_args: un_arg
   49           | liste_args VIRGULE un_arg

   50 un_arg: expression

   51 condition: SI PARENTHESE_OUVRANTE expression_booleenne PARENTHESE_FERMANTE ALORS liste_instructions

   52 tant_que: TANT_QUE expression_booleenne FAIRE liste_instructions

   53 affectation: variable OPAFF expression_arithmetique

   54 variable: IDF
   55         | IDF suite_crochet

   56 suite_crochet: CROCHET_OUVRANT expression_arithmetique CROCHET_FERMANT
   57              | CROCHET_OUVRANT expression_arithmetique CROCHET_FERMANT suite_crochet

   58 expression: expression_arithmetique
   59           | expression_booleenne

   60 expression_arithmetique: expression_arithmetique PLUS expression_arithmetique2
   61                        | expression_arithmetique MOINS expression_arithmetique2
   62                        | expression_arithmetique2

   63 expression_arithmetique2: expression_arithmetique2 MULT expression_arithmetique3
   64                         | expression_arithmetique2 DIV expression_arithmetique3
   65                         | expression_arithmetique3

   66 expression_arithmetique3: PARENTHESE_OUVRANTE expression_arithmetique PARENTHESE_FERMANTE
   67                         | CSTE_ENTIERE
   68                         | variable

   69 expression_booleenne: nom_type opbool nom_type
   70                     | expression_booleenne AND expression_booleenne
   71                     | expression_booleenne OR expression_booleenne

   72 opbool: EGALE
   73       | DIFF
   74       | SUP
   75       | SUPE
   76       | INF
   77       | INFE


Terminals, with rules where they appear

$end (0) 0
error (256)
ENTIER (258) 34
REEL (259) 35
BOOLEEN (260) 36
CARACTERE (261) 37
CHAINE (262) 38
IDF (263) 10 17 18 19 31 33 43 45 54 55
INF (264) 76
INFE (265) 77
SUPE (266) 75
SUP (267) 74
DIFF (268) 73
EGALE (269) 72
AND (270) 70
OR (271) 71
VRAI (272)
FAUX (273)
PROG (274) 1
DEBUT (275) 20
FIN (276) 20
POINT_VIRGULE (277) 4 5 21 22 30 42
DEUX_POINTS (278) 10 17 31 43
POINT_POINT (279) 16
VIRGULE (280) 15 49
TYPE (281) 10
VARIABLE (282) 17
PROCEDURE (283) 18
FONCTION (284) 19
STRUCT (285) 11
FSTRUCT (286) 11
TABLEAU (287) 12
DE (288) 12
RETOURNE (289) 19 28
SI (290) 51
ALORS (291) 51
SINON (292)
TANT_QUE (293) 52
FAIRE (294) 52
POUR (295)
CSTE_ENTIERE (296) 38 67
CSTE_REEL (297)
VIDE (298) 27
ACCOLADE_FERMANTE (299)
ACCOLADE_OUVRANT (300)
PARENTHESE_FERMANTE (301) 40 44 47 51 66
PARENTHESE_OUVRANTE (302) 40 44 47 51 66
CROCHET_OUVRANT (303) 13 38 56 57
CROCHET_FERMANT (304) 13 38 56 57
PLUS (305) 60
MOINS (306) 61
MULT (307) 63
DIV (308) 64
OPAFF (309) 53
LIRE (310)
ECRIRE (311)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
programme (58)
    on left: 1, on right: 0
corps (59)
    on left: 2 3, on right: 1 18 19
liste_declarations (60)
    on left: 4 5, on right: 2 5
declaration (61)
    on left: 6 7 8 9, on right: 4 5
declaration_type (62)
    on left: 10, on right: 6
suite_declaration_type (63)
    on left: 11 12, on right: 10
dimension (64)
    on left: 13, on right: 12
liste_dimensions (65)
    on left: 14 15, on right: 13 15
une_dimension (66)
    on left: 16, on right: 14 15
declaration_variable (67)
    on left: 17, on right: 7
declaration_procedure (68)
    on left: 18, on right: 8
declaration_fonction (69)
    on left: 19, on right: 9
liste_instructions (70)
    on left: 20, on right: 2 3 51 52
suite_liste_inst (71)
    on left: 21 22, on right: 20 22
instruction (72)
    on left: 23 24 25 26 27 28, on right: 21 22
liste_champs (73)
    on left: 29 30, on right: 11 30
un_champ (74)
    on left: 31, on right: 29 30
nom_type (75)
    on left: 32 33, on right: 12 17 31 69
type_simple (76)
    on left: 34 35 36 37 38, on right: 19 32 43
liste_parametres (77)
    on left: 39 40, on right: 18 19
liste_param (78)
    on left: 41 42, on right: 40 42
un_param (79)
    on left: 43, on right: 41 42
resultat_retourne (80)
    on left: 44, on right: 28
appel (81)
    on left: 45, on right: 26
liste_arguments (82)
    on left: 46 47, on right: 45
liste_args (83)
    on left: 48 49, on right: 47 49
un_arg (84)
    on left: 50, on right: 48 49
condition (85)
    on left: 51, on right: 24
tant_que (86)
    on left: 52, on right: 25
affectation (87)
    on left: 53, on right: 23
variable (88)
    on left: 54 55, on right: 53 68
suite_crochet (89)
    on left: 56 57, on right: 55 57
expression (90)
    on left: 58 59, on right: 16 44 50
expression_arithmetique (91)
    on left: 60 61 62, on right: 53 56 57 58 60 61 66
expression_arithmetique2 (92)
    on left: 63 64 65, on right: 60 61 62 63 64
expression_arithmetique3 (93)
    on left: 66 67 68, on right: 63 64 65
expression_booleenne (94)
    on left: 69 70 71, on right: 51 52 59 70 71
opbool (95)
    on left: 72 73 74 75 76 77, on right: 69


State 0

    0 $accept: . programme $end

    PROG  shift, and go to state 1

    programme  go to state 2


State 1

    1 programme: PROG . corps

    DEBUT      shift, and go to state 3
    TYPE       shift, and go to state 4
    VARIABLE   shift, and go to state 5
    PROCEDURE  shift, and go to state 6
    FONCTION   shift, and go to state 7

    corps                  go to state 8
    liste_declarations     go to state 9
    declaration            go to state 10
    declaration_type       go to state 11
    declaration_variable   go to state 12
    declaration_procedure  go to state 13
    declaration_fonction   go to state 14
    liste_instructions     go to state 15


State 2

    0 $accept: programme . $end

    $end  shift, and go to state 16


State 3

   20 liste_instructions: DEBUT . suite_liste_inst FIN

    IDF       shift, and go to state 17
    RETOURNE  shift, and go to state 18
    SI        shift, and go to state 19
    TANT_QUE  shift, and go to state 20
    VIDE      shift, and go to state 21

    suite_liste_inst  go to state 22
    instruction       go to state 23
    appel             go to state 24
    condition         go to state 25
    tant_que          go to state 26
    affectation       go to state 27
    variable          go to state 28


State 4

   10 declaration_type: TYPE . IDF DEUX_POINTS suite_declaration_type

    IDF  shift, and go to state 29


State 5

   17 declaration_variable: VARIABLE . IDF DEUX_POINTS nom_type

    IDF  shift, and go to state 30


State 6

   18 declaration_procedure: PROCEDURE . IDF liste_parametres corps

    IDF  shift, and go to state 31


State 7

   19 declaration_fonction: FONCTION . IDF liste_parametres RETOURNE type_simple corps

    IDF  shift, and go to state 32


State 8

    1 programme: PROG corps .

    $default  reduce using rule 1 (programme)


State 9

    2 corps: liste_declarations . liste_instructions
    5 liste_declarations: liste_declarations . declaration POINT_VIRGULE

    DEBUT      shift, and go to state 3
    TYPE       shift, and go to state 4
    VARIABLE   shift, and go to state 5
    PROCEDURE  shift, and go to state 6
    FONCTION   shift, and go to state 7

    declaration            go to state 33
    declaration_type       go to state 11
    declaration_variable   go to state 12
    declaration_procedure  go to state 13
    declaration_fonction   go to state 14
    liste_instructions     go to state 34


State 10

    4 liste_declarations: declaration . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 35


State 11

    6 declaration: declaration_type .

    $default  reduce using rule 6 (declaration)


State 12

    7 declaration: declaration_variable .

    $default  reduce using rule 7 (declaration)


State 13

    8 declaration: declaration_procedure .

    $default  reduce using rule 8 (declaration)


State 14

    9 declaration: declaration_fonction .

    $default  reduce using rule 9 (declaration)


State 15

    3 corps: liste_instructions .

    $default  reduce using rule 3 (corps)


State 16

    0 $accept: programme $end .

    $default  accept


State 17

   45 appel: IDF . liste_arguments
   54 variable: IDF .
   55         | IDF . suite_crochet

    PARENTHESE_OUVRANTE  shift, and go to state 36
    CROCHET_OUVRANT      shift, and go to state 37

    OPAFF     reduce using rule 54 (variable)
    $default  reduce using rule 46 (liste_arguments)

    liste_arguments  go to state 38
    suite_crochet    go to state 39


State 18

   28 instruction: RETOURNE . resultat_retourne

    PARENTHESE_OUVRANTE  shift, and go to state 40

    resultat_retourne  go to state 41


State 19

   51 condition: SI . PARENTHESE_OUVRANTE expression_booleenne PARENTHESE_FERMANTE ALORS liste_instructions

    PARENTHESE_OUVRANTE  shift, and go to state 42


State 20

   52 tant_que: TANT_QUE . expression_booleenne FAIRE liste_instructions

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type              go to state 49
    type_simple           go to state 50
    expression_booleenne  go to state 51


State 21

   27 instruction: VIDE .

    $default  reduce using rule 27 (instruction)


State 22

   20 liste_instructions: DEBUT suite_liste_inst . FIN
   22 suite_liste_inst: suite_liste_inst . instruction POINT_VIRGULE

    IDF       shift, and go to state 17
    FIN       shift, and go to state 52
    RETOURNE  shift, and go to state 18
    SI        shift, and go to state 19
    TANT_QUE  shift, and go to state 20
    VIDE      shift, and go to state 21

    instruction  go to state 53
    appel        go to state 24
    condition    go to state 25
    tant_que     go to state 26
    affectation  go to state 27
    variable     go to state 28


State 23

   21 suite_liste_inst: instruction . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 54


State 24

   26 instruction: appel .

    $default  reduce using rule 26 (instruction)


State 25

   24 instruction: condition .

    $default  reduce using rule 24 (instruction)


State 26

   25 instruction: tant_que .

    $default  reduce using rule 25 (instruction)


State 27

   23 instruction: affectation .

    $default  reduce using rule 23 (instruction)


State 28

   53 affectation: variable . OPAFF expression_arithmetique

    OPAFF  shift, and go to state 55


State 29

   10 declaration_type: TYPE IDF . DEUX_POINTS suite_declaration_type

    DEUX_POINTS  shift, and go to state 56


State 30

   17 declaration_variable: VARIABLE IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 57


State 31

   18 declaration_procedure: PROCEDURE IDF . liste_parametres corps

    PARENTHESE_OUVRANTE  shift, and go to state 58

    $default  reduce using rule 39 (liste_parametres)

    liste_parametres  go to state 59


State 32

   19 declaration_fonction: FONCTION IDF . liste_parametres RETOURNE type_simple corps

    PARENTHESE_OUVRANTE  shift, and go to state 58

    $default  reduce using rule 39 (liste_parametres)

    liste_parametres  go to state 60


State 33

    5 liste_declarations: liste_declarations declaration . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 61


State 34

    2 corps: liste_declarations liste_instructions .

    $default  reduce using rule 2 (corps)


State 35

    4 liste_declarations: declaration POINT_VIRGULE .

    $default  reduce using rule 4 (liste_declarations)


State 36

   47 liste_arguments: PARENTHESE_OUVRANTE . liste_args PARENTHESE_FERMANTE

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    nom_type                  go to state 49
    type_simple               go to state 50
    liste_args                go to state 65
    un_arg                    go to state 66
    variable                  go to state 67
    expression                go to state 68
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 37

   56 suite_crochet: CROCHET_OUVRANT . expression_arithmetique CROCHET_FERMANT
   57              | CROCHET_OUVRANT . expression_arithmetique CROCHET_FERMANT suite_crochet

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique   go to state 74
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71


State 38

   45 appel: IDF liste_arguments .

    $default  reduce using rule 45 (appel)


State 39

   55 variable: IDF suite_crochet .

    $default  reduce using rule 55 (variable)


State 40

   44 resultat_retourne: PARENTHESE_OUVRANTE . expression PARENTHESE_FERMANTE

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    nom_type                  go to state 49
    type_simple               go to state 50
    variable                  go to state 67
    expression                go to state 75
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 41

   28 instruction: RETOURNE resultat_retourne .

    $default  reduce using rule 28 (instruction)


State 42

   51 condition: SI PARENTHESE_OUVRANTE . expression_booleenne PARENTHESE_FERMANTE ALORS liste_instructions

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type              go to state 49
    type_simple           go to state 50
    expression_booleenne  go to state 76


State 43

   34 type_simple: ENTIER .

    $default  reduce using rule 34 (type_simple)


State 44

   35 type_simple: REEL .

    $default  reduce using rule 35 (type_simple)


State 45

   36 type_simple: BOOLEEN .

    $default  reduce using rule 36 (type_simple)


State 46

   37 type_simple: CARACTERE .

    $default  reduce using rule 37 (type_simple)


State 47

   38 type_simple: CHAINE . CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT

    CROCHET_OUVRANT  shift, and go to state 77


State 48

   33 nom_type: IDF .

    $default  reduce using rule 33 (nom_type)


State 49

   69 expression_booleenne: nom_type . opbool nom_type

    INF    shift, and go to state 78
    INFE   shift, and go to state 79
    SUPE   shift, and go to state 80
    SUP    shift, and go to state 81
    DIFF   shift, and go to state 82
    EGALE  shift, and go to state 83

    opbool  go to state 84


State 50

   32 nom_type: type_simple .

    $default  reduce using rule 32 (nom_type)


State 51

   52 tant_que: TANT_QUE expression_booleenne . FAIRE liste_instructions
   70 expression_booleenne: expression_booleenne . AND expression_booleenne
   71                     | expression_booleenne . OR expression_booleenne

    AND    shift, and go to state 85
    OR     shift, and go to state 86
    FAIRE  shift, and go to state 87


State 52

   20 liste_instructions: DEBUT suite_liste_inst FIN .

    $default  reduce using rule 20 (liste_instructions)


State 53

   22 suite_liste_inst: suite_liste_inst instruction . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 88


State 54

   21 suite_liste_inst: instruction POINT_VIRGULE .

    $default  reduce using rule 21 (suite_liste_inst)


State 55

   53 affectation: variable OPAFF . expression_arithmetique

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique   go to state 89
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71


State 56

   10 declaration_type: TYPE IDF DEUX_POINTS . suite_declaration_type

    STRUCT   shift, and go to state 90
    TABLEAU  shift, and go to state 91

    suite_declaration_type  go to state 92


State 57

   17 declaration_variable: VARIABLE IDF DEUX_POINTS . nom_type

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type     go to state 93
    type_simple  go to state 50


State 58

   40 liste_parametres: PARENTHESE_OUVRANTE . liste_param PARENTHESE_FERMANTE

    IDF  shift, and go to state 94

    liste_param  go to state 95
    un_param     go to state 96


State 59

   18 declaration_procedure: PROCEDURE IDF liste_parametres . corps

    DEBUT      shift, and go to state 3
    TYPE       shift, and go to state 4
    VARIABLE   shift, and go to state 5
    PROCEDURE  shift, and go to state 6
    FONCTION   shift, and go to state 7

    corps                  go to state 97
    liste_declarations     go to state 9
    declaration            go to state 10
    declaration_type       go to state 11
    declaration_variable   go to state 12
    declaration_procedure  go to state 13
    declaration_fonction   go to state 14
    liste_instructions     go to state 15


State 60

   19 declaration_fonction: FONCTION IDF liste_parametres . RETOURNE type_simple corps

    RETOURNE  shift, and go to state 98


State 61

    5 liste_declarations: liste_declarations declaration POINT_VIRGULE .

    $default  reduce using rule 5 (liste_declarations)


State 62

   33 nom_type: IDF .
   54 variable: IDF .
   55         | IDF . suite_crochet

    CROCHET_OUVRANT  shift, and go to state 37

    INF       reduce using rule 33 (nom_type)
    INFE      reduce using rule 33 (nom_type)
    SUPE      reduce using rule 33 (nom_type)
    SUP       reduce using rule 33 (nom_type)
    DIFF      reduce using rule 33 (nom_type)
    EGALE     reduce using rule 33 (nom_type)
    $default  reduce using rule 54 (variable)

    suite_crochet  go to state 39


State 63

   67 expression_arithmetique3: CSTE_ENTIERE .

    $default  reduce using rule 67 (expression_arithmetique3)


State 64

   66 expression_arithmetique3: PARENTHESE_OUVRANTE . expression_arithmetique PARENTHESE_FERMANTE

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique   go to state 99
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71


State 65

   47 liste_arguments: PARENTHESE_OUVRANTE liste_args . PARENTHESE_FERMANTE
   49 liste_args: liste_args . VIRGULE un_arg

    VIRGULE              shift, and go to state 100
    PARENTHESE_FERMANTE  shift, and go to state 101


State 66

   48 liste_args: un_arg .

    $default  reduce using rule 48 (liste_args)


State 67

   68 expression_arithmetique3: variable .

    $default  reduce using rule 68 (expression_arithmetique3)


State 68

   50 un_arg: expression .

    $default  reduce using rule 50 (un_arg)


State 69

   58 expression: expression_arithmetique .
   60 expression_arithmetique: expression_arithmetique . PLUS expression_arithmetique2
   61                        | expression_arithmetique . MOINS expression_arithmetique2

    PLUS   shift, and go to state 102
    MOINS  shift, and go to state 103

    $default  reduce using rule 58 (expression)


State 70

   62 expression_arithmetique: expression_arithmetique2 .
   63 expression_arithmetique2: expression_arithmetique2 . MULT expression_arithmetique3
   64                         | expression_arithmetique2 . DIV expression_arithmetique3

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    $default  reduce using rule 62 (expression_arithmetique)


State 71

   65 expression_arithmetique2: expression_arithmetique3 .

    $default  reduce using rule 65 (expression_arithmetique2)


State 72

   59 expression: expression_booleenne .
   70 expression_booleenne: expression_booleenne . AND expression_booleenne
   71                     | expression_booleenne . OR expression_booleenne

    AND  shift, and go to state 85
    OR   shift, and go to state 86

    $default  reduce using rule 59 (expression)


State 73

   54 variable: IDF .
   55         | IDF . suite_crochet

    CROCHET_OUVRANT  shift, and go to state 37

    $default  reduce using rule 54 (variable)

    suite_crochet  go to state 39


State 74

   56 suite_crochet: CROCHET_OUVRANT expression_arithmetique . CROCHET_FERMANT
   57              | CROCHET_OUVRANT expression_arithmetique . CROCHET_FERMANT suite_crochet
   60 expression_arithmetique: expression_arithmetique . PLUS expression_arithmetique2
   61                        | expression_arithmetique . MOINS expression_arithmetique2

    CROCHET_FERMANT  shift, and go to state 106
    PLUS             shift, and go to state 102
    MOINS            shift, and go to state 103


State 75

   44 resultat_retourne: PARENTHESE_OUVRANTE expression . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 107


State 76

   51 condition: SI PARENTHESE_OUVRANTE expression_booleenne . PARENTHESE_FERMANTE ALORS liste_instructions
   70 expression_booleenne: expression_booleenne . AND expression_booleenne
   71                     | expression_booleenne . OR expression_booleenne

    AND                  shift, and go to state 85
    OR                   shift, and go to state 86
    PARENTHESE_FERMANTE  shift, and go to state 108


State 77

   38 type_simple: CHAINE CROCHET_OUVRANT . CSTE_ENTIERE CROCHET_FERMANT

    CSTE_ENTIERE  shift, and go to state 109


State 78

   76 opbool: INF .

    $default  reduce using rule 76 (opbool)


State 79

   77 opbool: INFE .

    $default  reduce using rule 77 (opbool)


State 80

   75 opbool: SUPE .

    $default  reduce using rule 75 (opbool)


State 81

   74 opbool: SUP .

    $default  reduce using rule 74 (opbool)


State 82

   73 opbool: DIFF .

    $default  reduce using rule 73 (opbool)


State 83

   72 opbool: EGALE .

    $default  reduce using rule 72 (opbool)


State 84

   69 expression_booleenne: nom_type opbool . nom_type

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type     go to state 110
    type_simple  go to state 50


State 85

   70 expression_booleenne: expression_booleenne AND . expression_booleenne

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type              go to state 49
    type_simple           go to state 50
    expression_booleenne  go to state 111


State 86

   71 expression_booleenne: expression_booleenne OR . expression_booleenne

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type              go to state 49
    type_simple           go to state 50
    expression_booleenne  go to state 112


State 87

   52 tant_que: TANT_QUE expression_booleenne FAIRE . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 113


State 88

   22 suite_liste_inst: suite_liste_inst instruction POINT_VIRGULE .

    $default  reduce using rule 22 (suite_liste_inst)


State 89

   53 affectation: variable OPAFF expression_arithmetique .
   60 expression_arithmetique: expression_arithmetique . PLUS expression_arithmetique2
   61                        | expression_arithmetique . MOINS expression_arithmetique2

    PLUS   shift, and go to state 102
    MOINS  shift, and go to state 103

    $default  reduce using rule 53 (affectation)


State 90

   11 suite_declaration_type: STRUCT . liste_champs FSTRUCT

    IDF  shift, and go to state 114

    liste_champs  go to state 115
    un_champ      go to state 116


State 91

   12 suite_declaration_type: TABLEAU . dimension DE nom_type

    CROCHET_OUVRANT  shift, and go to state 117

    dimension  go to state 118


State 92

   10 declaration_type: TYPE IDF DEUX_POINTS suite_declaration_type .

    $default  reduce using rule 10 (declaration_type)


State 93

   17 declaration_variable: VARIABLE IDF DEUX_POINTS nom_type .

    $default  reduce using rule 17 (declaration_variable)


State 94

   43 un_param: IDF . DEUX_POINTS type_simple

    DEUX_POINTS  shift, and go to state 119


State 95

   40 liste_parametres: PARENTHESE_OUVRANTE liste_param . PARENTHESE_FERMANTE
   42 liste_param: liste_param . POINT_VIRGULE un_param

    POINT_VIRGULE        shift, and go to state 120
    PARENTHESE_FERMANTE  shift, and go to state 121


State 96

   41 liste_param: un_param .

    $default  reduce using rule 41 (liste_param)


State 97

   18 declaration_procedure: PROCEDURE IDF liste_parametres corps .

    $default  reduce using rule 18 (declaration_procedure)


State 98

   19 declaration_fonction: FONCTION IDF liste_parametres RETOURNE . type_simple corps

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47

    type_simple  go to state 122


State 99

   60 expression_arithmetique: expression_arithmetique . PLUS expression_arithmetique2
   61                        | expression_arithmetique . MOINS expression_arithmetique2
   66 expression_arithmetique3: PARENTHESE_OUVRANTE expression_arithmetique . PARENTHESE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 123
    PLUS                 shift, and go to state 102
    MOINS                shift, and go to state 103


State 100

   49 liste_args: liste_args VIRGULE . un_arg

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    nom_type                  go to state 49
    type_simple               go to state 50
    un_arg                    go to state 124
    variable                  go to state 67
    expression                go to state 68
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 101

   47 liste_arguments: PARENTHESE_OUVRANTE liste_args PARENTHESE_FERMANTE .

    $default  reduce using rule 47 (liste_arguments)


State 102

   60 expression_arithmetique: expression_arithmetique PLUS . expression_arithmetique2

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique2  go to state 125
    expression_arithmetique3  go to state 71


State 103

   61 expression_arithmetique: expression_arithmetique MOINS . expression_arithmetique2

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique2  go to state 126
    expression_arithmetique3  go to state 71


State 104

   63 expression_arithmetique2: expression_arithmetique2 MULT . expression_arithmetique3

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique3  go to state 127


State 105

   64 expression_arithmetique2: expression_arithmetique2 DIV . expression_arithmetique3

    IDF                  shift, and go to state 73
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    variable                  go to state 67
    expression_arithmetique3  go to state 128


State 106

   56 suite_crochet: CROCHET_OUVRANT expression_arithmetique CROCHET_FERMANT .
   57              | CROCHET_OUVRANT expression_arithmetique CROCHET_FERMANT . suite_crochet

    CROCHET_OUVRANT  shift, and go to state 37

    $default  reduce using rule 56 (suite_crochet)

    suite_crochet  go to state 129


State 107

   44 resultat_retourne: PARENTHESE_OUVRANTE expression PARENTHESE_FERMANTE .

    $default  reduce using rule 44 (resultat_retourne)


State 108

   51 condition: SI PARENTHESE_OUVRANTE expression_booleenne PARENTHESE_FERMANTE . ALORS liste_instructions

    ALORS  shift, and go to state 130


State 109

   38 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE . CROCHET_FERMANT

    CROCHET_FERMANT  shift, and go to state 131


State 110

   69 expression_booleenne: nom_type opbool nom_type .

    $default  reduce using rule 69 (expression_booleenne)


State 111

   70 expression_booleenne: expression_booleenne . AND expression_booleenne
   70                     | expression_booleenne AND expression_booleenne .
   71                     | expression_booleenne . OR expression_booleenne

    AND  shift, and go to state 85
    OR   shift, and go to state 86

    AND       [reduce using rule 70 (expression_booleenne)]
    OR        [reduce using rule 70 (expression_booleenne)]
    $default  reduce using rule 70 (expression_booleenne)


State 112

   70 expression_booleenne: expression_booleenne . AND expression_booleenne
   71                     | expression_booleenne . OR expression_booleenne
   71                     | expression_booleenne OR expression_booleenne .

    AND  shift, and go to state 85
    OR   shift, and go to state 86

    AND       [reduce using rule 71 (expression_booleenne)]
    OR        [reduce using rule 71 (expression_booleenne)]
    $default  reduce using rule 71 (expression_booleenne)


State 113

   52 tant_que: TANT_QUE expression_booleenne FAIRE liste_instructions .

    $default  reduce using rule 52 (tant_que)


State 114

   31 un_champ: IDF . DEUX_POINTS nom_type

    DEUX_POINTS  shift, and go to state 132


State 115

   11 suite_declaration_type: STRUCT liste_champs . FSTRUCT
   30 liste_champs: liste_champs . POINT_VIRGULE un_champ

    POINT_VIRGULE  shift, and go to state 133
    FSTRUCT        shift, and go to state 134


State 116

   29 liste_champs: un_champ .

    $default  reduce using rule 29 (liste_champs)


State 117

   13 dimension: CROCHET_OUVRANT . liste_dimensions CROCHET_FERMANT

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    liste_dimensions          go to state 135
    une_dimension             go to state 136
    nom_type                  go to state 49
    type_simple               go to state 50
    variable                  go to state 67
    expression                go to state 137
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 118

   12 suite_declaration_type: TABLEAU dimension . DE nom_type

    DE  shift, and go to state 138


State 119

   43 un_param: IDF DEUX_POINTS . type_simple

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47

    type_simple  go to state 139


State 120

   42 liste_param: liste_param POINT_VIRGULE . un_param

    IDF  shift, and go to state 94

    un_param  go to state 140


State 121

   40 liste_parametres: PARENTHESE_OUVRANTE liste_param PARENTHESE_FERMANTE .

    $default  reduce using rule 40 (liste_parametres)


State 122

   19 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple . corps

    DEBUT      shift, and go to state 3
    TYPE       shift, and go to state 4
    VARIABLE   shift, and go to state 5
    PROCEDURE  shift, and go to state 6
    FONCTION   shift, and go to state 7

    corps                  go to state 141
    liste_declarations     go to state 9
    declaration            go to state 10
    declaration_type       go to state 11
    declaration_variable   go to state 12
    declaration_procedure  go to state 13
    declaration_fonction   go to state 14
    liste_instructions     go to state 15


State 123

   66 expression_arithmetique3: PARENTHESE_OUVRANTE expression_arithmetique PARENTHESE_FERMANTE .

    $default  reduce using rule 66 (expression_arithmetique3)


State 124

   49 liste_args: liste_args VIRGULE un_arg .

    $default  reduce using rule 49 (liste_args)


State 125

   60 expression_arithmetique: expression_arithmetique PLUS expression_arithmetique2 .
   63 expression_arithmetique2: expression_arithmetique2 . MULT expression_arithmetique3
   64                         | expression_arithmetique2 . DIV expression_arithmetique3

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    $default  reduce using rule 60 (expression_arithmetique)


State 126

   61 expression_arithmetique: expression_arithmetique MOINS expression_arithmetique2 .
   63 expression_arithmetique2: expression_arithmetique2 . MULT expression_arithmetique3
   64                         | expression_arithmetique2 . DIV expression_arithmetique3

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    $default  reduce using rule 61 (expression_arithmetique)


State 127

   63 expression_arithmetique2: expression_arithmetique2 MULT expression_arithmetique3 .

    $default  reduce using rule 63 (expression_arithmetique2)


State 128

   64 expression_arithmetique2: expression_arithmetique2 DIV expression_arithmetique3 .

    $default  reduce using rule 64 (expression_arithmetique2)


State 129

   57 suite_crochet: CROCHET_OUVRANT expression_arithmetique CROCHET_FERMANT suite_crochet .

    $default  reduce using rule 57 (suite_crochet)


State 130

   51 condition: SI PARENTHESE_OUVRANTE expression_booleenne PARENTHESE_FERMANTE ALORS . liste_instructions

    DEBUT  shift, and go to state 3

    liste_instructions  go to state 142


State 131

   38 type_simple: CHAINE CROCHET_OUVRANT CSTE_ENTIERE CROCHET_FERMANT .

    $default  reduce using rule 38 (type_simple)


State 132

   31 un_champ: IDF DEUX_POINTS . nom_type

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type     go to state 143
    type_simple  go to state 50


State 133

   30 liste_champs: liste_champs POINT_VIRGULE . un_champ

    IDF  shift, and go to state 114

    un_champ  go to state 144


State 134

   11 suite_declaration_type: STRUCT liste_champs FSTRUCT .

    $default  reduce using rule 11 (suite_declaration_type)


State 135

   13 dimension: CROCHET_OUVRANT liste_dimensions . CROCHET_FERMANT
   15 liste_dimensions: liste_dimensions . VIRGULE une_dimension

    VIRGULE          shift, and go to state 145
    CROCHET_FERMANT  shift, and go to state 146


State 136

   14 liste_dimensions: une_dimension .

    $default  reduce using rule 14 (liste_dimensions)


State 137

   16 une_dimension: expression . POINT_POINT expression

    POINT_POINT  shift, and go to state 147


State 138

   12 suite_declaration_type: TABLEAU dimension DE . nom_type

    ENTIER     shift, and go to state 43
    REEL       shift, and go to state 44
    BOOLEEN    shift, and go to state 45
    CARACTERE  shift, and go to state 46
    CHAINE     shift, and go to state 47
    IDF        shift, and go to state 48

    nom_type     go to state 148
    type_simple  go to state 50


State 139

   43 un_param: IDF DEUX_POINTS type_simple .

    $default  reduce using rule 43 (un_param)


State 140

   42 liste_param: liste_param POINT_VIRGULE un_param .

    $default  reduce using rule 42 (liste_param)


State 141

   19 declaration_fonction: FONCTION IDF liste_parametres RETOURNE type_simple corps .

    $default  reduce using rule 19 (declaration_fonction)


State 142

   51 condition: SI PARENTHESE_OUVRANTE expression_booleenne PARENTHESE_FERMANTE ALORS liste_instructions .

    $default  reduce using rule 51 (condition)


State 143

   31 un_champ: IDF DEUX_POINTS nom_type .

    $default  reduce using rule 31 (un_champ)


State 144

   30 liste_champs: liste_champs POINT_VIRGULE un_champ .

    $default  reduce using rule 30 (liste_champs)


State 145

   15 liste_dimensions: liste_dimensions VIRGULE . une_dimension

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    une_dimension             go to state 149
    nom_type                  go to state 49
    type_simple               go to state 50
    variable                  go to state 67
    expression                go to state 137
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 146

   13 dimension: CROCHET_OUVRANT liste_dimensions CROCHET_FERMANT .

    $default  reduce using rule 13 (dimension)


State 147

   16 une_dimension: expression POINT_POINT . expression

    ENTIER               shift, and go to state 43
    REEL                 shift, and go to state 44
    BOOLEEN              shift, and go to state 45
    CARACTERE            shift, and go to state 46
    CHAINE               shift, and go to state 47
    IDF                  shift, and go to state 62
    CSTE_ENTIERE         shift, and go to state 63
    PARENTHESE_OUVRANTE  shift, and go to state 64

    nom_type                  go to state 49
    type_simple               go to state 50
    variable                  go to state 67
    expression                go to state 150
    expression_arithmetique   go to state 69
    expression_arithmetique2  go to state 70
    expression_arithmetique3  go to state 71
    expression_booleenne      go to state 72


State 148

   12 suite_declaration_type: TABLEAU dimension DE nom_type .

    $default  reduce using rule 12 (suite_declaration_type)


State 149

   15 liste_dimensions: liste_dimensions VIRGULE une_dimension .

    $default  reduce using rule 15 (liste_dimensions)


State 150

   16 une_dimension: expression POINT_POINT expression .

    $default  reduce using rule 16 (une_dimension)
